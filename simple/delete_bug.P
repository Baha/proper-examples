-file("delete_bug.erl", 1).

-module(delete_bug).

-export([prop_delete_only_interesting1/0,
         prop_delete_only_interesting2/0,
         prop_delete_with_stats/0,
         prop_delete_only_interesting3/0,
         prop_delete/0,
         prop_delete_more/0]).

-export([delete/2]).

-file("/Users/baha/proper-1.3/include/proper.hrl", 1).

-compile(debug_info).

-file("/Users/baha/proper-1.3/include/proper_common.hrl", 1).

-file("/Users/baha/proper-1.3/include/proper.hrl", 32).

-import(proper, [numtests/2,fails/1,on_output/2,conjunction/1]).

-import(proper,
        [collect/2,
         collect/3,
         aggregate/2,
         aggregate/3,
         classify/3,
         measure/3,
         with_title/1,
         equals/2]).

-import(proper_types,
        [integer/2,
         float/2,
         atom/0,
         binary/0,
         binary/1,
         bitstring/0,
         bitstring/1,
         list/1,
         vector/2,
         union/1,
         weighted_union/1,
         tuple/1,
         loose_tuple/1,
         exactly/1,
         fixed_list/1,
         function/2,
         map/2,
         any/0]).

-import(proper_types,
        [integer/0,
         non_neg_integer/0,
         pos_integer/0,
         neg_integer/0,
         range/2,
         float/0,
         non_neg_float/0,
         number/0,
         boolean/0,
         byte/0,
         char/0,
         list/0,
         tuple/0,
         string/0,
         wunion/1,
         term/0,
         timeout/0,
         arity/0]).

-import(proper_types,
        [int/0,
         nat/0,
         largeint/0,
         real/0,
         bool/0,
         choose/2,
         elements/1,
         oneof/1,
         frequency/1,
         return/1,
         default/2,
         orderedlist/1,
         function0/1,
         function1/1,
         function2/1,
         function3/1,
         function4/1,
         weighted_default/2,
         parameter/1,
         parameter/2,
         with_parameter/3,
         with_parameters/2]).

-import(proper_unicode, [utf8/0,utf8/1,utf8/2]).

-import(proper_types, [resize/2,non_empty/1,noshrink/1]).

-import(proper_symb,
        [eval/1,
         eval/2,
         defined/1,
         well_defined/1,
         pretty_print/1,
         pretty_print/2]).

-import(proper_statem,
        [commands/1,
         commands/2,
         parallel_commands/1,
         parallel_commands/2,
         more_commands/2]).

-import(proper_statem,
        [run_commands/2,
         run_commands/3,
         state_after/2,
         command_names/1,
         zip/2,
         run_parallel_commands/2,
         run_parallel_commands/3]).

-import(proper_unused_imports_remover, []).

-file("delete_bug.erl", 8).

delete(X, L) ->
    delete(X, L, []).

delete(_, [], Acc) ->
    lists:reverse(Acc);
delete(X, [X|Rest], Acc) ->
    lists:reverse(Acc) ++ Rest;
delete(X, [Y|Rest], Acc) ->
    delete(X, Rest, [Y|Acc]).

prop_delete() ->
    proper:forall({integer(),list(integer())},
                  fun({X,L}) ->
                         not lists:member(X, delete(X, L))
                  end).

prop_delete_more() ->
    numtests(1000,
             proper:forall({integer(),list(integer())},
                           fun({X,L}) ->
                                  not lists:member(X, delete(X, L))
                           end)).

prop_delete_with_stats() ->
    proper:forall({integer(),list(integer())},
                  fun({X,L}) ->
                         collect(lists:member(X, L),
                                 not lists:member(X, delete(X, L)))
                  end).

prop_delete_only_interesting1() ->
    proper:forall({integer(),list(integer())},
                  fun({X,L}) ->
                         proper:implies(lists:member(X, L),
                                        fun() ->
                                               not lists:member(X,
                                                                delete(X,
                                                                       L))
                                        end)
                  end).

list_and_elem1() ->
    proper_types:add_constraint({integer(),list(integer())},
                                fun({X,L}) ->
                                       lists:member(X, L)
                                end,
                                true).

prop_delete_only_interesting2() ->
    proper:forall(list_and_elem1(),
                  fun({X,L}) ->
                         not lists:member(X, delete(X, L))
                  end).

list_and_elem2() ->
    proper_types:bind(non_empty(list(integer())),
                      fun(L) ->
                             {oneof(L),L}
                      end,
                      false).

prop_delete_only_interesting3() ->
    proper:forall(list_and_elem2(),
                  fun({X,L}) ->
                         not lists:member(X, delete(X, L))
                  end).



